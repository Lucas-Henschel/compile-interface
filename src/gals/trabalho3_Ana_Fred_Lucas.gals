#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
mai:[A-Z]
min:[a-z]
digito:[0-9]

//linha
comentario_de_linha:\-\-[^\n]*

//bloco
comentario_de_bloco:\{[^\{\}]*\}
#Tokens
identificador: ({mai} {min} | {min})+(({mai} {min})*({min})*(_({digito})+)?)

cint: [1-9][0-9]?[0-9]?[0-9]?[0-9]? | [0]

cfloat: ([0] | [1-9][0-9]?[0-9]?[0-9]?[0-9]?) "." ([0-9]?[0-9]?[0-9]?[0-9]?[1-9] | [0])

cstring: \"[^\n\"\\]*\"

// palavras reservadas
pr_add = identificador: "add"
pr_and = identificador: "and"
pr_begin = identificador: "begin"
pr_bool = identificador: "bool"
pr_count = identificador: "count"
pr_delete = identificador: "delete"
pr_do = identificador: "do"
pr_elementOf = identificador: "elementOf"
pr_else = identificador: "else"
pr_end = identificador: "end"
pr_false = identificador: "false"
pr_float = identificador: "float"
pr_if = identificador: "if"
pr_int = identificador: "int"
pr_list = identificador: "list"
pr_not = identificador: "not"
pr_or = identificador: "or"
pr_print = identificador: "print"
pr_read = identificador: "read"
pr_size = identificador: "size"
pr_string = identificador: "string"
pr_true = identificador: "true"
pr_until = identificador: "until"

// simbolos especiais
"+"
"-"
"*"
"/"
"=="
"~="
"<"
">"
"="
"<-"
"("
")"
";"
","

// reconhecer e ignorar caracteres
:[\s\t\n]

// reconhecer e ignorar comentarios
:!{comentario_de_linha}
:!{comentario_de_bloco}
#NonTerminals
<program>

<lista_instrucao>
<lista_instrucao1>

<instrucao>

<comando>
<comando1>

<dec_var>
<dec_tipo>
<tipo>

<lista_identificador>
<lista_identificador1>

<atribuicao>
<manipulacao_lista>
<posicao>
<elemento>
<entrada_dados>

<lista_entrada>
<lista_entrada1>

<dec_string>
<saida_dados>

<lista_expressao>
<lista_expressao1>

<comando_selecao>

<lista_comando>
<lista_comando1>

<else_opc>
<comandos_repeticao>

<expressao>
<expressao_>
<valor>
<relacional>
<operador_relacional>
<relacional_>
<aritmetica>
<termo>
<aritmetica_>
<termo_>
<fator>
<fator_>
#Grammar
<program> ::= pr_begin <lista_instrucao> pr_end ;

<lista_instrucao> ::= <instrucao> ";" <lista_instrucao1> ;
<lista_instrucao1> ::= î | <lista_instrucao> ;

<instrucao> ::= <dec_var> | <comando> ;

<comando> ::= identificador <comando1> | <entrada_dados> | <saida_dados> | <comando_selecao> | <comandos_repeticao> ;
<comando1> ::= <atribuicao> | <manipulacao_lista> ;

<dec_var> ::= <dec_tipo> <lista_identificador> ;

<dec_tipo> ::= <tipo> | pr_list "(" <tipo> "," cint ")" ;

<tipo> ::= pr_int | pr_float | pr_string | pr_bool ;

<lista_identificador> ::= identificador <lista_identificador1> ;
<lista_identificador1> ::= î | "," <lista_identificador> ;

<atribuicao> ::=  "=" <expressao> | "<-" <expressao> ;

<manipulacao_lista> ::= pr_add "(" <elemento> "," <posicao> ")" | pr_delete "(" <posicao> ")" ;

<posicao> ::= <expressao> ;
<elemento> ::= <expressao> ;

<entrada_dados> ::= pr_read "(" <lista_entrada> ")" ;

<lista_entrada> ::= <dec_string> identificador <lista_entrada1> ;
<lista_entrada1> ::= î | "," <lista_entrada> ;

<dec_string> ::= cstring "," | î ;

<saida_dados> ::= pr_print "(" <lista_expressao> ")" ;

<lista_expressao> ::= <expressao> <lista_expressao1> ;
<lista_expressao1> ::= î | "," <lista_expressao> ;

<comando_selecao> ::= pr_if <expressao> <lista_comando> <else_opc> pr_end ;

<lista_comando> ::= <comando> ";" <lista_comando1> ;
<lista_comando1> ::= î | <lista_comando> ;

<else_opc> ::= pr_else <lista_comando> | î ;

<comandos_repeticao> ::= pr_do <lista_comando> pr_until <expressao> ;

<expressao> ::= <valor> <expressao_> ;

<expressao_> ::= î | pr_and <valor> <expressao_> | pr_or <valor> <expressao_> ;

<valor> ::= <relacional> | pr_true | pr_false | pr_not <valor> ;

<relacional> ::= <aritmetica> <relacional_> ;

<relacional_> ::= î | <operador_relacional> <aritmetica> ;

<operador_relacional>::= "==" | "~=" | "<" | ">" ;

<aritmetica> ::= <termo> <aritmetica_> ;

<aritmetica_> ::= î | "+" <termo> <aritmetica_> | "-" <termo> <aritmetica_> ;

<termo> ::= <fator> <termo_> ;

<termo_> ::= î | "*" <fator> <termo_> | "/" <fator> <termo_> ;

<fator> ::= identificador <fator_> |
 cint |
 cfloat |
 cstring |
 "(" <expressao> ")" |
 "+" <fator> |
 "-" <fator> ;

<fator_> ::= î | pr_count | pr_size | pr_elementOf "(" <expressao> ")" ;




