package gals;

public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 82;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  3, -1, -1, -1, -1, -1, -1,  3, -1, -1,  3, -1, -1,  2, -1,  3,  3,  3,  3, -1, -1,  3,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  5, -1, -1, -1, -1, -1, -1,  4, -1, -1,  5, -1, -1, -1, -1,  4,  5,  4,  4, -1, -1,  5,  5, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1,  8,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 11, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, 13, -1, 13, 13, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 14, -1, 14, 15, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 17, -1, 16, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, 22 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 24, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 27, 27, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, 27, -1, 27, 27, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1 },
        { -1, 28, 28, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, 28, -1, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 30, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, 32 },
        { -1, 34, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 36, 36, 36, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, 36, -1, 36, 36, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, 38 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, 40, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, 41, 41, -1, -1, 42, -1, -1, -1, -1, 42, 42, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 46, 46, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, 46, -1, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1 },
        { -1, 47, -1, -1, -1, -1, 48, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, 47, -1, -1, -1, 49, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, 47 },
        { -1, 50, 50, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1, -1, 53, -1, -1, -1, -1, -1, 51, -1, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1 },
        { -1, 54, 54, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 58, 59, 60, -1, -1, -1, -1, -1, -1 },
        { -1, 55, -1, -1, -1, -1, 55, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, 55, -1, -1, -1, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, 56, 56, -1, -1, -1, 55, 55, 55 },
        { -1, 61, 61, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1 },
        { -1, 65, 65, 65, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 65, 65, -1, -1, -1, -1, -1, -1, -1, -1, 65, -1, -1, -1 },
        { -1, 62, -1, -1, -1, -1, 62, -1, -1, -1, -1, 62, -1, -1, -1, -1, -1, 62, -1, -1, -1, 62, 62, 62, -1, -1, -1, -1, 63, 64, -1, -1, 62, 62, 62, 62, -1, -1, -1, 62, 62, 62 },
        { -1, 66, -1, -1, -1, -1, 66, -1, -1, -1, -1, 66, -1, -1, -1, -1, -1, 66, -1, -1, -1, 66, 66, 66, -1, -1, -1, -1, 66, 66, 67, 68, 66, 66, 66, 66, -1, -1, -1, 66, 66, 66 },
        { -1, 69, 70, 71, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 74, 75, -1, -1, -1, -1, -1, -1, -1, -1, 73, -1, -1, -1 },
        { -1, 76, -1, -1, -1, -1, 76, -1, -1, 77, -1, 76, 79, -1, -1, -1, -1, 76, -1, -1, -1, 76, 76, 76, 78, -1, -1, -1, 76, 76, 76, 76, 76, 76, 76, 76, -1, -1, -1, 76, 76, 76 }
    };

    int[][] PRODUCTIONS = 
    {
        {  8, 44, 15 },
        { 46, 41, 45 },
        {  0 },
        { 44 },
        { 49 },
        { 47 },
        {  2, 48 },
        { 58 },
        { 62 },
        { 65 },
        { 69 },
        { 54 },
        { 55 },
        { 50, 52 },
        { 51 },
        { 20, 39, 51, 42,  3, 40 },
        { 19 },
        { 17 },
        { 26 },
        {  9 },
        {  2, 53 },
        {  0 },
        { 42, 52 },
        { 37, 70 },
        { 38, 70 },
        {  6, 39, 57, 42, 56, 40 },
        { 11, 39, 56, 40 },
        { 70 },
        { 70 },
        { 24, 39, 59, 40 },
        { 61,  2, 60 },
        {  0 },
        { 42, 59 },
        {  5, 42 },
        {  0 },
        { 23, 39, 63, 40 },
        { 70, 64 },
        {  0 },
        { 42, 63 },
        { 18, 70, 66, 68, 15 },
        { 47, 41, 67 },
        {  0 },
        { 66 },
        { 14, 66 },
        {  0 },
        { 12, 66, 28, 70 },
        { 72, 71 },
        {  0 },
        {  7, 72, 71 },
        { 22, 72, 71 },
        { 73 },
        { 27 },
        { 16 },
        { 21, 72 },
        { 76, 75 },
        {  0 },
        { 74, 76 },
        { 33 },
        { 34 },
        { 35 },
        { 36 },
        { 77, 78 },
        {  0 },
        { 29, 77, 78 },
        { 30, 77, 78 },
        { 80, 79 },
        {  0 },
        { 31, 80, 79 },
        { 32, 80, 79 },
        {  2, 81 },
        {  3 },
        {  4 },
        {  5 },
        { 39, 70, 40 },
        { 29, 80 },
        { 30, 80 },
        {  0 },
        { 10 },
        { 25 },
        { 13, 39, 70, 40 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado identificador",
        "Era esperado cint",
        "Era esperado cfloat",
        "Era esperado cstring",
        "Era esperado pr_add",
        "Era esperado pr_and",
        "Era esperado pr_begin",
        "Era esperado pr_bool",
        "Era esperado pr_count",
        "Era esperado pr_delete",
        "Era esperado pr_do",
        "Era esperado pr_elementOf",
        "Era esperado pr_else",
        "Era esperado pr_end",
        "Era esperado pr_false",
        "Era esperado pr_float",
        "Era esperado pr_if",
        "Era esperado pr_int",
        "Era esperado pr_list",
        "Era esperado pr_not",
        "Era esperado pr_or",
        "Era esperado pr_print",
        "Era esperado pr_read",
        "Era esperado pr_size",
        "Era esperado pr_string",
        "Era esperado pr_true",
        "Era esperado pr_until",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"==\"",
        "Era esperado \"~=\"",
        "Era esperado \"<\"",
        "Era esperado \">\"",
        "Era esperado \"=\"",
        "Era esperado \"<-\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \";\"",
        "Era esperado \",\"",
        "<program> inválido",
        "<lista_instrucao> inválido",
        "<lista_instrucao1> inválido",
        "<instrucao> inválido",
        "<comando> inválido",
        "<comando1> inválido",
        "<dec_var> inválido",
        "<dec_tipo> inválido",
        "<tipo> inválido",
        "<lista_identificador> inválido",
        "<lista_identificador1> inválido",
        "<atribuicao> inválido",
        "<manipulacao_lista> inválido",
        "<posicao> inválido",
        "<elemento> inválido",
        "<entrada_dados> inválido",
        "<lista_entrada> inválido",
        "<lista_entrada1> inválido",
        "<dec_string> inválido",
        "<saida_dados> inválido",
        "<lista_expressao> inválido",
        "<lista_expressao1> inválido",
        "<comando_selecao> inválido",
        "<lista_comando> inválido",
        "<lista_comando1> inválido",
        "<else_opc> inválido",
        "<comandos_repeticao> inválido",
        "<expressao> inválido",
        "<expressao_> inválido",
        "<valor> inválido",
        "<relacional> inválido",
        "<operador_relacional> inválido",
        "<relacional_> inválido",
        "<aritmetica> inválido",
        "<termo> inválido",
        "<aritmetica_> inválido",
        "<termo_> inválido",
        "<fator> inválido",
        "<fator_> inválido"
    };
}
